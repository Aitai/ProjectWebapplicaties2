{
    "variable": [
        {
            "id": "baseUrl",
            "key": "baseUrl",
            "type": "string",
            "name": "string",
            "value": "localhost:8000"
        }
    ],
    "info": {
        "name": "Hanze Project 2.3",
        "_postman_id": "72e456dc-32ab-4dc1-ad58-fb87ff15ac0e",
        "description": "Weather API for the Society for the Protection of Birds",
        "schema": "https:\/\/schema.getpostman.com\/json\/collection\/v2.1.0\/collection.json"
    },
    "item": [
        {
            "name": "Authentication",
            "description": "",
            "item": [
                {
                    "name": "Basic login",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "authentication",
                            "query": [],
                            "raw": "{{baseUrl}}\/authentication"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"email\":\"development@dxmusic.nl\",\"password\":\"password\"}"
                        },
                        "description": "This is used for first time authentication.",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"token\": \"String\"\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "\"error\": {\n \"code\": 401,\n \"message\": \"Invalid credentials.\"\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Renew token",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "authentication\/jwt",
                            "query": [],
                            "raw": "{{baseUrl}}\/authentication\/jwt"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "With this endpoint you can request a new token, the current one should be valid."
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"token\": \"String\"\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 401,
                            "body": "\"error\": {\n \"code\": 401,\n \"message\": \"Unauthorized.\"\n}",
                            "name": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "Endpoints",
            "description": "",
            "item": [
                {
                    "name": "\/",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "\/",
                            "query": [],
                            "raw": "{{baseUrl}}\/\/"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [
                                {
                                    "key": "cache-control",
                                    "value": "no-cache, private"
                                },
                                {
                                    "key": "content-type",
                                    "value": "application\/json"
                                }
                            ],
                            "code": 200,
                            "body": "Lumen (9.0.2) (Laravel Components ^9.0)",
                            "name": ""
                        }
                    ]
                }
            ]
        },
        {
            "name": "Weather Data",
            "description": "\nAPI's for everything related to weather data and stations.",
            "item": [
                {
                    "name": "Send weather data to backend",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "stations\/sendWeatherData",
                            "query": [],
                            "raw": "{{baseUrl}}\/stations\/sendWeatherData"
                        },
                        "method": "POST",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"WEATHERDATA\":[\"100020\",\"1970-01-01 00:00\",10,10,10,10,10,10,10,10,[0,0,0,0,0,0]]}"
                        },
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": []
                },
                {
                    "name": "Get all weather data",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "stations\/getWeatherData",
                            "query": [],
                            "raw": "{{baseUrl}}\/stations\/getWeatherData"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "[\n {\n     \"id\": Int,\n     \"station_name\": \"Int\",\n     \"datetime\": \"Timestamp\"\n     \"temp\": \"Float\",\n     \"dew_point_temp\": \"Float\",\n     \"station_air_pressure\": \"Float\",\n     \"sea_level_air_pressure\": \"Float\",\n     \"visibility\": \"Float\",\n     \"wind_speed\": \"Float\",\n     \"precipitation\": \"Float\",\n     \"snow_depth\": \"Float\",\n     \"cloud_cover_percentage\": \"Float\",\n     \"wind_direction\": Int,\n     \"frost\": Int,\n     \"rain\": Int,\n     \"snow\": Int,\n     \"hail\": Int,\n     \"thunderstorm\": Int,\n     \"tornado\": Int\n }\n]",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Get a list of available stations.",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "stations\/getStations",
                            "query": [],
                            "raw": "{{baseUrl}}\/stations\/getStations"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": {
                            "mode": "raw",
                            "raw": "{\"page\":1,\"ordered_row\":\"temp\",\"order_by\":\"asc\"}"
                        },
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"data\" :\n [\n     {\n         \"name\": \"Int\",\n         \"longitude\": Float,\n         \"latitude\": Float,\n         \"elevation\": Int,\n         \"is_active\": Boolean,\n         \"temp\": Float,\n         \"dew_point_temp\": Float,\n         \"station_air_pressure\": Float,\n         \"sea_level_air_pressure\": Float,\n         \"visibility\": Float,\n         \"wind_speed\": FLoat,\n         \"precipitation\": Float,\n         \"snow_depth\": Int,\n         \"cloud_cover_percentage\": Int,\n         \"wind_direction\": Float,\n         \"frost\": Int,\n         \"rain\": Int,\n         \"snow\": Int,\n         \"hail\": Int,\n         \"thunderstorm\": Int,\n         \"tornado\": Int\n     }\n ],\n \"current_page\": 1,\n \"first_page_url\": \"http:\\\/\\\/localhost:8000\\\/stations\\\/getStations?page=1\",\n \"from\": 1,\n \"last_page\": Int,\n \"last_page_url\": \"http:\\\/\\\/localhost:8000\\\/stations\\\/getStations?page=Int\",\n \"links\":\n [\n     {\n         \"url\": Url,\n         \"label\": \"pagination.previous\",\n         \"active\": Boolean\n     },\n     {\n         \"url\": \"http:\\\/\\\/localhost:8000\\\/stations\\\/getStations?page=1\",\n         \"label\": \"1\",\n         \"active\": Boolean\n     },\n ],\n \"next_page_url\": \"http:\\\/\\\/localhost:8000\\\/stations\\\/getStations?page=2\",\n \"path\": \"http:\\\/\\\/localhost:8000\\\/stations\\\/getStations\",\n \"per_page\": 10,\n \"prev_page_url\": null,\n \"to\": 10,\n \"total\": Int\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Get weather data using the station name.",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "stations\/getWeatherData\/:station_name",
                            "query": [],
                            "raw": "{{baseUrl}}\/stations\/getWeatherData\/:station_name",
                            "variable": [
                                {
                                    "id": "station_name",
                                    "key": "station_name",
                                    "value": "170220",
                                    "description": "Valid station name."
                                }
                            ]
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "{\n \"station\":\n     {\n         \"name\": \"Int\",\n         \"longitude\": Float,\n         \"latitude\": Float,\n         \"elevation\": Int\n     },\n     \"measurements\":\n     [\n         {\n             \"id\": Int,\n             \"station_name\": \"Int\",\n             \"datetime\": \"Timestamp\",\n             \"temp\": \"Float\",\n             \"dew_point_temp\": \"Float\",\n             \"station_air_pressure\": \"Float\",\n             \"sea_level_air_pressure\": \"Float\",\n             \"visibility\": \"Float\",\n             \"wind_speed\": \"Float\",\n             \"precipitation\": \"Float\",\n             \"snow_depth\": \"Float\",\n             \"cloud_cover_percentage\": \"Float\",\n             \"wind_direction\": Int,\n             \"frost\": Int,\n             \"rain\": Int,\n             \"snow\": Int,\n             \"hail\": Int,\n             \"thunderstorm\": Int,\n             \"tornado\": Int\n         }\n     ],\n     \"nearest_location\":\n         {\n             \"id\": Int,\n             \"station_name\": \"Int\",\n             \"name\": \"String\",\n             \"administrative_region1\": \"String\",\n             \"administrative_region2\": \"String\",\n             \"country_code\": \"String\",\n             \"longitude\": Float,\n             \"latitude\": Float\n         },\n     \"geo_location\":\n     {\n         \"id\": Int,\n         \"station_name\": \"Int\",\n         \"country_code\": \"String\",\n         \"island\": \"String\",\n         \"county\": \"String\",\n         \"place\": \"String\",\n         \"hamlet\": \"String\",\n         \"town\": \"String\",\n         \"municipality\": \"String\",\n         \"state_district\": \"String\",\n         \"administrative\": \"String\",\n         \"state\": \"String\",\n         \"village\": \"String\",\n         \"region\": \"String\",\n         \"province\": \"String\",\n         \"city\": \"String\",\n         \"locality\": \"String\",\n         \"postcode\": \"Int\",\n         \"country\": \"String\"\n     }\n }\n}",
                            "name": ""
                        },
                        {
                            "header": [],
                            "code": 404,
                            "body": "\"error\": {\n \"code\": 404,\n \"message\": \"No station with that name\"\n}",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Get lowest temperatures of the last four weeks.",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "stations\/getLowestTemperatures",
                            "query": [],
                            "raw": "{{baseUrl}}\/stations\/getLowestTemperatures"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "[\n {\n     \"max_temp\": \"Float\",\n     \"date\": \"Timestamp\",\n     \"town\": \"String\"\n },\n {\n     \"max_temp\": \"Float\",\n     \"date\": \"Timestamp\",\n     \"town\": \"String\"\n }\n]",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Get peak wind speeds of the last four weeks.",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "stations\/getPeakWindSpeeds",
                            "query": [],
                            "raw": "{{baseUrl}}\/stations\/getPeakWindSpeeds"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "[\n {\n     \"max_wind_speed\": \"Float\",\n     \"date\": \"Timestamp\",\n     \"town\": \"String\"\n },\n {\n     \"max_wind_speed\": \"Float\",\n     \"date\": \"Timestamp\",\n     \"town\": \"String\"\n }\n]",
                            "name": ""
                        }
                    ]
                },
                {
                    "name": "Get an XML export of the last four weeks",
                    "request": {
                        "url": {
                            "host": "{{baseUrl}}",
                            "path": "stations\/getExport",
                            "query": [],
                            "raw": "{{baseUrl}}\/stations\/getExport"
                        },
                        "method": "GET",
                        "header": [
                            {
                                "key": "Content-Type",
                                "value": "application\/json"
                            },
                            {
                                "key": "Accept",
                                "value": "application\/json"
                            }
                        ],
                        "body": null,
                        "description": "",
                        "auth": {
                            "type": "noauth"
                        }
                    },
                    "response": [
                        {
                            "header": [],
                            "code": 200,
                            "body": "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<weather>\n <Item0>\n     <id>Int<\/id>\n     <station_name>Int<\/station_name>\n     <datetime>Timestamp<\/datetime>\n     <temp>Float<\/temp>\n     <dew_point_temp>Float<\/dew_point_temp>\n     <station_air_pressure>Float<\/station_air_pressure>\n     <sea_level_air_pressure>Float<\/sea_level_air_pressure>\n     <visibility>Float<\/visibility>\n     <wind_speed>Float<\/wind_speed>\n     <precipitation>Float<\/precipitation>\n     <snow_depth>Float<\/snow_depth>\n     <cloud_cover_percentage>Float<\/cloud_cover_percentage>\n     <wind_direction>Int<\/wind_direction>\n     <frost>Int<\/frost>\n     <rain>Int<\/rain>\n     <snow>Int<\/snow>\n     <hail>Int<\/hail>\n     <thunderstorm>Int<\/thunderstorm>\n     <tornado>Int<\/tornado>\n     <Itemstation>\n         <name>Int<\/name>\n         <longitude>Float<\/longitude>\n         <latitude>Float<\/latitude>\n         <elevation>Int<\/elevation>\n     <\/Itemstation>\n     <Itemgeo_location>\n         <id>Int<\/id>\n         <station_name>Int<\/station_name>\n         <country_code>String<\/country_code>\n         <island>String<\/island>\n         <county>String<\/county>\n         <place>String<\/place>\n         <hamlet>String<\/hamlet>\n         <town>String<\/town>\n         <municipality>String<\/municipality>\n         <state_district>String<\/state_district>\n         <administrative>String<\/administrative>\n         <state>String<\/state>\n         <village>String<\/village>\n         <region>String<\/region>\n         <province>String<\/province>\n         <city>String<\/city>\n         <locality>String<\/locality>\n         <postcode>String<\/postcode>\n         <country>String<\/country>\n     <\/Itemgeo_location>\n     <Itemcorrection>\n         <Item0>\n             <id>Int<\/id>\n             <weather_data_id>Int<\/weather_data_id>\n             <type>String<\/type>\n             <original_value>Float<\/original_value>\n         <\/Item0>\n     <\/Itemcorrection>\n <\/Item0>\n<\/weather>",
                            "name": ""
                        }
                    ]
                }
            ]
        }
    ],
    "auth": {
        "type": "noauth"
    }
}